{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Beautiful",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#bind"
		},
		{
			"include": "#tag"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.query.beau",
					"match": "(?i)\\b(select|find|order|by|from|where|first|last|limit|offset|asc|desc)\\b"
				},
				{
					"name": "keyword.control.query.join.beau",
					"match": "\\b(join|left|right|inner)\\b"
				},
				{
					"name": "keyword.control.operator.beau",
					"match": "\\b(and|or|not|full|equal|more|less|than|between|like|is)\\b"
				},
				{
					"name": "keyword.control.long-running.beau",
					"match": "\\b(wait)\\b"
				},
				{
					"name": "keyword.control.declare.beau",
					"match": "\\b(class|model|static|func|type)\\b"
				},
				{
					"name": "keyword.control.assign.beau",
					"match": "\\b(set|to|save|new|soft|hard|delete|map|reduce|filter|sort|pick)\\b"
				},
				{
					"name": "keyword.control.condition.beau",
					"match": "\\b(if|else|for|every|switch|while|case|default|break|continue|return|loop|times|as)\\b"
				},
				{
					"name": "keyword.control.pronouns.beau",
					"match": "\\b(a|an|in)\\b"
				},
				{
					"name": "keyword.control.exception.beau",
					"match": "\\b(when|happen|remind|with)\\b"
				},
				{
					"name": "keyword.control.css.beau",
					"match": "\\b(px|em|rem|vw|vh|vmin|vmax|%)\\b"
				},
				{
					"name": "keyword.control.css.color.beau",
					"match": "\\b(black|silver|gold|gray|white|maroon|red|purple|fuchsia|green|lime|olive|yellow|navy|blue|teal|aqua)\\b"
				},
				{
					"name": "keyword.control.http.beau",
					"match": "\\b(GET|PUT|POST|DELETE|PATCH|OPTIONS|HEAD|TRACE|CONNECT)\\b"
				},
				{
					"name": "keyword.control.arithmetic.beau",
					"match": "\\+|-|\\*|\\^|/|mod|plus|minus|times|divide|and|or|power"
				},
				{
					"name": "keyword.control.logical.beau",
					"match": "=|==|===|!=|!==|~=|>|>=|<|<="
				},
				{
					"name": "constant.numeric.beau",
					"match": "-?\\b\\d+(\\.\\d+)?\\b"
				},
				{
					"name": "constant.language.boolean.beau",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "constant.language.type.beau",
					"match": "\\b(string|number|int|decimal|boolean|undefined|null)\\b"
				},
				{
					"name": "constant.language.data-type.beau",
					"match": "\\b(array|object|collection)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.other.beau",
					"begin": "\\.\\.\\.",
					"end": "\\.{3}(?!\\.)",
					"patterns": [
						{
							"name": "string.quoted.template.beau",
							"begin": ",,",
							"end": ",,",
							"patterns": [
								{
									"include": "#keywords"
								},
								{
									"include": "#bind"
								}
							]
						}
					]
				},
				{
					"name": "string.quoted.other.beau",
					"begin": "`",
					"end": "`"
				},
				{
					"name": "string.quoted.double.beau",
					"begin": "\"",
					"end": "\""
				},
				{
					"name": "string.quoted.single.beau",
					"begin": "'",
					"end": "'"
				}
			]
		},
		"comments": {
			"patterns": [
				{
					"name": "comment.line.beau",
					"match": "\\.\\,(.*)"
				}
			]
		},
		"bind": {
			"patterns": [
				{
					"name": "entity.other.attribute-name.beau",
					"match": "(?!and|or)\\b[a-zA-Z0-9_]+(?:\\.[a-zA-Z0-9_]+)?\\b"
				},
				{
					"name": "keyword.operator.beau",
					"match": "\\.\\.(\\w+)",
					"captures": {
						"1": {
							"name": "variable.other.beau",
							"patterns": [
								{
									"include": "#keywords"
								},
								{
									"name": "variable.language.beau",
									"match": "\\b[a-zA-Z0-9_]+(?:\\.[a-zA-Z0-9_]+)?\\b",
									"scope": "variable.language"
								}
							]
						}
					}
				},
				{
					"name": "keyword.operator.type.beau",
					"match": "\\,\\,(\\w+)",
					"captures": {
						"1": {
							"name": "variable.other.beau",
							"patterns": [
								{
									"include": "#keywords"
								},
								{
									"name": "variable.language",
									"match": "\\b[a-zA-Z0-9_]+(?:\\.[a-zA-Z0-9_]+)?\\b",
									"scope": "variable.language"
								}
							]
						}
					}
				},
				{
					"name": "meta.function.arrow.beau",
					"begin": "\\(.*\\)\\s*=>\\s*{",
					"end": "}",
					"patterns": [
						{
							"include": "source.ts"
						}
					]
				}
			]
		},
		"tag.children": {
			"patterns": [
				{
					"include": "#keywords"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#bind"
				},
				{
					"include": "#tag"
				}
			]
		},
		"tag": {
			"patterns": [
				{
					"name": "entity.name.tag.beau",
					"match": "\\.(?!w\\+)([^\\s]+)(\\n+)?(.*?)(\\n+)?(\\1)\\.",
					"captures": {
						"3": {
							"name": "attributes.beau",
							"patterns": [
								{
									"include": "#keywords"
								},
								{
									"include": "#strings"
								},
								{
									"include": "#comments"
								},
								{
									"include": "#bind"
								},
								{
									"include": "#tag.children"
								}
							]
						}
					}
				},
				{
					"name": "entity.name.tag.beau",
					"begin": "\\.(?!w\\+)([^\\s]+)\\s*$",
					"end": "\\1\\.",
					"patterns": [
						{
							"include": "#keywords"
						},
						{
							"include": "#strings"
						},
						{
							"include": "#comments"
						},
						{
							"include": "#bind"
						},
						{
							"include": "#tag.children"
						}
					]
				}
			]
		}
	},
	"shellVariables": {
		"TM_COMMENT_START": ".,"
	},
	"scopeName": "source.beau",
	"settings": {
		"foreground": "#f1fa8c"
	}
}